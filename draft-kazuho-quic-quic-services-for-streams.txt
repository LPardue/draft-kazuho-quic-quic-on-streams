



QUIC                                                              K. Oku
Internet-Draft                                                    Fastly
Intended status: Standards Track                        25 November 2023
Expires: 28 May 2024


                       QUIC Services for Streams
           draft-kazuho-quic-quic-services-for-streams-latest

Abstract

   This document specifies a polyfill of QUIC version 1 that runs on top
   of bi-directional streams such as TLS.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Discussion of this document takes place on the QUIC Working Group
   mailing list (quic@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/quic/.

   Source for this draft and an issue tracker can be found at
   https://github.com/kazuho/quic-services-for-streams.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 28 May 2024.

Copyright Notice

   Copyright (c) 2023 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  The protocol
   4.  QUIC Frames
     4.1.  STREAM Frames
     4.2.  TRANSPORT_PARAMETERS Frames
     4.3.  Extension Frames
   5.  Security Considerations
   6.  IANA Considerations
   7.  References
     7.1.  Normative References
     7.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

   QUIC version 1 ([RFC9000]) is a bi-directional, authenticated
   transport-layer protocol built on top of UDP ([RFC768]).  The
   protocol provides multiplexed flow-controlled streams without head-
   of-line blocking as one of its core services, along with low-latency
   connection establishment and efficient loss recovery.

   However, there are downsides with QUIC.

   One downside is that QUIC is not as universally accessible as TCP
   ([RFC9283]).  This is because QUIC is built on top of UDP, which is
   occasionally blocked by middleboxes.

   Another downside is that QUIC is computationally expensive compared
   to TLS ([RFC8446]) over TCP.  This is partly because QUIC encrypts
   each packet which is smaller than the encryption unit of TLS leading
   to more overhead, and partly because UDP is less optimized in the
   computing infrastructure.

   Due to these limitations, applications are often served on top of
   both QUIC and TCP, with the former aiming to provide better user-
   experience, while the latter being considered as a backstop for
   network reachability or to provide computational efficiency where
   necessary.

   One such example is HTTP.  HTTP/3 ([RFC9114]) runs on top of QUIC.
   HTTP/2 ([RFC9113]) runs on top of TCP.  Recently, there have been
   proposals to revise HTTP/2 due to security concerns
   ([h2-stream-limits]), which has led people wonder about the cost of
   maintaining multiple versions of HTTP.

   Another example is WebTransport.  WebTransport is a super set of
   HTTP, but because HTTP has different bindings for QUIC and TCP,
   WebTransport defines its own bindings for the two variants of HTTP
   ([webtrans-h3], [webtrans-h2]).

   In order to eliminate the cost of these duplicated efforts to provide
   services on top of both protocols, this document specifies a polyfill
   that allows application protocols built on top of QUIC to run on bi-
   directional streams such as TCP or TLS.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  The protocol

   QUIC Services for Streams can be used on any bi-directional byte
   stream that is ordered and reliable.

   QUIC frames are sent directly on top of the bi-directional byte
   stream.

   The frames are not encrypted.  It is the task of the lower layer
   providing the bi-directional byte stream (e.g., TLS) to provide
   confidentially and integrity.

   QUIC packet headers are not used.

   For exchanging the Transport Parameters, a new frame called
   TRANSPORT_PARAMETERS frame is defined.

4.  QUIC Frames

   In QUIC Services for Streams, the following QUIC frames are used
   without modifications.

   *  PADDING

   *  PING

   *  RESET_STREAM

   *  STOP_SENDING

   *  STREAM (0x0a and 0x0b)

   *  MAX_DATA

   *  MAX_STREAM_DATA

   *  MAX_STREAMS

   *  DATA_BLOCKED

   *  STREAM_DATA_BLOCKED

   *  STREAMS_BLOCKED

   Use of other frames defined in ([RFC9000]) are prohibited.  If an
   endpoint receives one of the prohibited frames, the endpoint MUST
   close the connection with TBD error.

4.1.  STREAM Frames

   In case of the STREAM frame, only the 0x0a and 0x0b variants (i.e.,
   the ones that carry the length but not the offset) are used.

   Senders can multiplex streams, but within each stream, data MUST be
   sent in order.

4.2.  TRANSPORT_PARAMETERS Frames

   In QUIC Services for Streams, Transport Parameters are exchanged as
   frames.

   This frame is the first frame being sent by an endpoint.  If the
   first frame being received by an endpoint is not a
   TRANSPORT_PARAMETERS frame, the endpoint MUST close the connection
   with a TBD error.

   TRANSPORT_PARAMETERS frames are formatted as show in Figure 1.

   TRANSPORT_PARAMETERS Frame {
     Type (i) = 0xTBD,
     Length (i),
     Transport Parameters (..),
   }

                                  Figure 1

   TRANSPORT_PARAMETER frames contain the following fields:

   Length:  A variable-length integer specifying the length of the
      Transport Parameters field in this TRANSPORT_PARAMETERS frame.

   Transport Parameters:  The Transport Parameters.  The encoding of the
      payload is as defined in Section 18 of [RFC9000].

4.3.  Extension Frames

   TBD

5.  Security Considerations

   TODO Security

6.  IANA Considerations

   TODO

7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC9000]  Iyengar, J., Ed. and M. Thomson, Ed., "QUIC: A UDP-Based
              Multiplexed and Secure Transport", RFC 9000,
              DOI 10.17487/RFC9000, May 2021,
              <https://www.rfc-editor.org/rfc/rfc9000>.

7.2.  Informative References

   [h2-stream-limits]
              Thomson, M. and L. Pardue, "Using HTTP/3 Stream Limits in
              HTTP/2", Work in Progress, Internet-Draft, draft-thomson-
              httpbis-h2-stream-limits-00, 6 November 2023,
              <https://datatracker.ietf.org/doc/html/draft-thomson-
              httpbis-h2-stream-limits-00>.

   [RFC768]   Postel, J., "User Datagram Protocol", STD 6, RFC 768,
              DOI 10.17487/RFC0768, August 1980,
              <https://www.rfc-editor.org/rfc/rfc768>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/rfc/rfc8446>.

   [RFC9113]  Thomson, M., Ed. and C. Benfield, Ed., "HTTP/2", RFC 9113,
              DOI 10.17487/RFC9113, June 2022,
              <https://www.rfc-editor.org/rfc/rfc9113>.

   [RFC9114]  Bishop, M., Ed., "HTTP/3", RFC 9114, DOI 10.17487/RFC9114,
              June 2022, <https://www.rfc-editor.org/rfc/rfc9114>.

   [RFC9283]  Carpenter, B., Ed., "IAB Charter Update for RFC Editor
              Model", BCP 39, RFC 9283, DOI 10.17487/RFC9283, June 2022,
              <https://www.rfc-editor.org/rfc/rfc9283>.

   [webtrans-h2]
              Frindell, A., Kinnear, E., Pauly, T., Thomson, M.,
              Vasiliev, V., and G. Xie, "WebTransport over HTTP/2", Work
              in Progress, Internet-Draft, draft-ietf-webtrans-http2-07,
              23 October 2023, <https://datatracker.ietf.org/doc/html/
              draft-ietf-webtrans-http2-07>.

   [webtrans-h3]
              Frindell, A., Kinnear, E., and V. Vasiliev, "WebTransport
              over HTTP/3", Work in Progress, Internet-Draft, draft-
              ietf-webtrans-http3-08, 23 October 2023,
              <https://datatracker.ietf.org/doc/html/draft-ietf-
              webtrans-http3-08>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Kazuho Oku
   Fastly
   Email: kazuhooku@gmail.com
